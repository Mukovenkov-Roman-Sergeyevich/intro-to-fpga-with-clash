Вводная лекция вообще про ПЛИС была отличная. Спасибо вам :)
Материал в виде первой книжки про схемотехнику тоже превосходен. Пытался начать курс на степике про Haskell, но что-то не зацепило.
Возможно видео курсы не для меня. Но это хорошо, что предоставлены возможности получать знания в разных формах.

Часть 1. Установка и настройка были очень наглядными, никаких трудностей не возникло.
Быть может, только, что нужно в VS Code постоянно нажимать на Ctrl + S,
Просто привык к автоматическому сохранению (немного потерял из-за этого времени)

Часть 2. Было тривиально. Я думаю, что каждый программист смог бы понять в чём дело, концепты пока лишь чуть отличаются.
Главное тут понять, что мы работаем с сигналами. А про это есть в тексте.
Домашняя работа скорее просто для того, чтобы получше выучить синтаксис, просто списать по шаблону.
Всё расписано очень хорошо, ссылок на ресурсы почитать много, поэтому думаю, что данные упражнения и материал можно соединить с 3-ей частью.
Или вообще дать самостоятельно.

Про получение схемы модуля. Это очень интересный способ посмотреть, что же ты такое в итоге натворил, очень обучает.
Думаю надо сделать акцент, что получать схемы в процессе обучения надо обязательно. Намного лучше будет понятно, что ты делаешь. Заодно лучше будут пониматься сами схемы.
Может ещё как-нибудь автоматизировать через тот же Makefile, чтобы было легко его получать. Но это похоже невозможно и это лишь мечты.

Про цифры рядом со строчками, которые объясняют действия в программе, - очень крутая штука.
Использование блоков в тексте "Примечание" и "Важно" привлекает внимание.

Часть 3. Необходимая практика для того, чтобы уже выучить главный синтаксис. Стоило чуть-чуть поднапрячься.
Задача на выражение всего через универсальный gate очень интересная, может стоит её дать в начале.
Вообще про сумматоры в тексте написано хорошо - сначала вариант с одной промежуточной переменной, а потом усложняется.
Видно, что эти переменные не отражаются на итоговой схеме.
Реализация сумматоров k чисел заставила задуматься и уже самому продумывать, как и что делать. Хорошо развивает навык настройки взаимодействия между модулями.
Reduce решается легче, имеет одну и ту же идею. Только вместо модуля у нас просто какая-то операция. Нужно было вставить задачу пораньше, чтобы было от лёгкого к сложному.
А после reduce можно поставить int. После int реализацию с параметром количества бит.

Часть 4. Как обычно, объяснения хорошие. Всё снова было наглядно. Но тут появляются новые концепты, поэтому уже надо побольше самостоятельно разбираться в первый раз.
Поизучать в принципе используемые штуки - как там используются мультиплексоры, скопировать схемки в logisim, посмотреть на схематику домашних заданий.
Посмотреть, как изменяются вещи в последовательном блоке always, в комбинационном блоке always. Найду на это время на выходных, дополню этот лог потом. Поизменяю поведение управляемых сигналов и т.д.

На основе шаблона быстро решил задачи этой части, потом поиграюсь с ними.

Очередная интерактивная игрушка - GTKWave. Поиграюсь.

Задания прикольные, действительно с этим нужно, наверное, как можно больше практики. Была проблема, что не синтезировалась схема для счёта нулей и единиц, пришлось ввести временные переменные.
В основном всё отлично, тема мне очень нравится. Синтаксис и введённые понятия уже хорошо закрепились в голове.
